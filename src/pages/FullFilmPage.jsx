import React, { useState } from "react";
import { useNavigate, useParams } from "react-router-dom";
import { useSearchOneFilmQuery } from "../store/filmSlice/film.api";
import Loader from "../components/Loader";
import { useDispatch, useSelector } from "react-redux";
import { addFavFilm, removeFavFilm } from "../store/favFilmSlice/favFilmSlice";

const FullFilm = () => {
  const dispatch = useDispatch();
  const navigate = useNavigate()
  const { id } = useParams();
  const { data, isError } = useSearchOneFilmQuery(id);
  const { favFilms } = useSelector((state) => state.favFilm);
  const [isFav, setIsFav] = useState(
    favFilms.some((obj) => obj?.imdbID === data?.imdbID)
  );

  const isAuth = JSON.parse(localStorage.getItem('admin'))

  const addFilmBtn = () => {
      dispatch(addFavFilm(data));
      setIsFav(true);
  };
  const removeFilmBtn = () => {
    dispatch(removeFavFilm(data?.imdbID));
    setIsFav(false);
  };

  const backBtn = () => {
    navigate('/registration')
  };

  if (!data) {
    return <Loader />;
  }
  return (
    <>
      {isError && (
        <div className="fullfilm-error">
          <h2>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ üòï</h2>
          <p>
            –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–∏–ª—å–º—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å
            –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ.
          </p>
        </div>
      )}
      <div className="container fullfilm">
        <img className="fullfilm-img" src={data.Poster} alt="Poster" />
        <div>
          <p>
            –ù–∞–∑–≤–∞–Ω–∏–µ: <span>{data.Title}</span>
          </p>
          <p>
            –ê–∫—Ç–µ—Ä—ã: <span>{data.Actors}</span>
          </p>
          <p>
            –ù–∞–≥—Ä–∞–¥—ã: <span>{data.Awards}</span>
          </p>
          <p>
            –ö–∞—Å—Å–æ–≤—ã–µ: <span>{data.BoxOffice}</span>
          </p>
          <p>
            –°—Ç—Ä–∞–Ω—ã: <span>{data.Country}</span>
          </p>
          <p>
            –î–∏—Ä–µ–∫—Ç–æ—Ä: <span>{data.Director}</span>
          </p>
          <p>
            –ñ–∞–Ω—Ä: <span>{data.Genre}</span>
          </p>
          <p>
            –Ø–∑—ã–∫–∏: <span>{data.Language}</span>
          </p>
          <p>
            –†–µ–π—Ç–∏–Ω–≥: <span>{data.Rated}</span>
          </p>
          <p>
            –î–∞—Ç–∞ –≤—ã–ø—É—Å–∫–∞: <span>{data.Released}</span>
          </p>
          <p>
            –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: <span>{data.Runtime}</span>
          </p>
          <p>
            –¢–∏–ø: <span>{data.Type}</span>
          </p>
          <p>
            –ü–∏—Å–∞—Ç–µ–ª—å: <span>{data.Writer}</span>
          </p>
          <p>
            imdbID: <span>{data.imdbID}</span>
          </p>
          <p>
            imdbID —Ä–µ–π—Ç–∏–Ω–≥: <span>{data.imdbRating}</span>
          </p>
          <p>
            imdbID –≥–æ–ª–æ—Å–∞: <span>{data.imdbVotes}</span>
          </p>
          <p>
            –°—é–∂–µ—Ç: <span>{data.Plot}</span>
          </p>
          <div className="fullfilm-btns">
            {!isFav && (
              <button
                onClick={isAuth ? addFilmBtn : backBtn}
                className="button button--registration"
              >
                <span>–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ</span>
              </button>
            )}

            {isFav && (
              <button
                onClick={isAuth ? removeFilmBtn : backBtn}
                className="button button--registration"
              >
                <span>–£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ</span>
              </button>
            )}
            <button onClick={() => navigate(-1)} className="button button--registration">
              <span>–ù–∞–∑–∞–¥</span>
            </button>
          </div>
        </div>
      </div>
    </>
  );
};

export default FullFilm;
